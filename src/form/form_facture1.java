/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package form;

import com.lowagie.text.Document;
import com.lowagie.text.Element;
import com.lowagie.text.FontFactory;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import jakarta.mail.Authenticator;
import jakarta.mail.Message;
import jakarta.mail.Multipart;
import jakarta.mail.PasswordAuthentication;
import jakarta.mail.Session;
import jakarta.mail.Transport;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeBodyPart;
import jakarta.mail.internet.MimeMessage;
import jakarta.mail.internet.MimeMultipart;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import testelogin1.ConnexionBD;

/**
 *
 * @author kenainy
 */
public class form_facture1 extends javax.swing.JPanel {
    static String numAchat = "";
    String email = "";
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement ps = null;
    
    public form_facture1() {
        initComponents();
        conn = ConnexionBD.conexion();
        affichage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new swing.panelBorder();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFacture = new swing.table();
        header1 = new component.header();
        pdf = new javax.swing.JButton();
        envoyeEmail = new javax.swing.JButton();

        panelBorder1.setBackground(new java.awt.Color(204, 204, 204));

        tableFacture.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableFacture.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableFactureMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableFacture);

        pdf.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        pdf.setText("Pdf");
        pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfActionPerformed(evt);
            }
        });

        envoyeEmail.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        envoyeEmail.setText("Envoyer Email");
        envoyeEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envoyeEmailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(512, 512, 512)
                .addComponent(pdf, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(257, 257, 257)
                .addComponent(envoyeEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header1, javax.swing.GroupLayout.DEFAULT_SIZE, 1565, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(envoyeEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pdf, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void envoyeEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envoyeEmailActionPerformed
       envoyerEmailAvecPDF(email,"teste","Facture d'achat de voiture","/home/kenainy/NetBeansProjects/testeLogin1/facture_"+numAchat+".pdf");
    }//GEN-LAST:event_envoyeEmailActionPerformed

    private void tableFactureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFactureMouseClicked
        DefaultTableModel model = (DefaultTableModel)tableFacture.getModel();
         int Myindex = tableFacture.getSelectedRow();
    //     System.out.println(Myindex);
         
          this.numAchat = model.getValueAt(Myindex, 0).toString();
               email = model.getValueAt(Myindex, 2).toString();
               
       
    }//GEN-LAST:event_tableFactureMouseClicked

    private void pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfActionPerformed
        genererFacturePDF(numAchat);
    }//GEN-LAST:event_pdfActionPerformed

      public void affichage() {
            
        try { 
            String requete = "SELECT A.numAchat as 'Numero achat', C.nom as 'Nom', C.mail as 'Email',CONCAT(FORMAT(SUM(A.qte * V.prix), 0), ' Ar')  as 'Montant total', A.date as 'Date' FROM ACHAT A JOIN CLIENT C on A.idcli = C.idcli JOIN VOITURE V on A.idvoit = V.idvoit GROUP BY A.numAchat, C.nom, C.mail, A.date ORDER BY A.numAchat ASC ";
            ps = conn.prepareStatement(requete);            
            rs = ps.executeQuery();
            tableFacture.setModel(DbUtils.resultSetToTableModel(rs));
                 
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
             centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
             centerRenderer.setFont(new Font("SansSerif", Font.BOLD, 30));
            for (int i = 0; i < tableFacture.getColumnCount(); i++) {
            tableFacture.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }

            // Supprimer les lignes verticales
            tableFacture.setShowVerticalLines(false);
            tableFacture.setShowHorizontalLines(true); // Optionnel
            tableFacture.getTableHeader().setReorderingAllowed(false); 
            tableFacture.setGridColor(Color.LIGHT_GRAY);
            
                
            Font font = new Font("SansSerif", Font.BOLD, 20); // nom, style, taille
            tableFacture.setFont(font);

            tableFacture.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            Font headerFont = new Font("SansSerif", Font.BOLD, 16);
            tableFacture.getTableHeader().setFont(headerFont);
            tableFacture.setGridColor(new Color(200, 200, 200));

              
            tableFacture.setRowHeight(50);
            
        
        }catch (Exception e) {
            System.out.println("--> Exception "+e);
        }
    }

public void genererFacturePDF(String numAchat) {
    try {
        
        ps = conn.prepareStatement("SET lc_time_names = 'fr_FR'");
        ps.execute();// 1. Infos client + date
        String infoClientSQL = "SELECT DATE_FORMAT(A.date, '%d %M %Y') AS dateFacturation, C.nom as nomClient, C.contact as contact FROM ACHAT A JOIN CLIENT C on A.idcli = C.idcli WHERE A.numAchat = ? LIMIT 1";

        PreparedStatement ps1 = conn.prepareStatement(infoClientSQL);
        ps1.setString(1, numAchat);
        ResultSet rs1 = ps1.executeQuery();

        String dateFacturation = "", nomClient = "", contact = "";
        if (rs1.next()) {
            dateFacturation = rs1.getString("dateFacturation");
            nomClient = rs1.getString("nomClient");
            contact = rs1.getString("contact");
        }

        // 2. Création du PDF
        Document document = new Document();
        PdfWriter.getInstance(document, new FileOutputStream("facture_" + numAchat + ".pdf"));
        document.open();

        com.lowagie.text.Font font = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 20);
        Paragraph title = new Paragraph("FACTURE DE N*"+numAchat, font);
        title.setAlignment(Element.ALIGN_CENTER);
        document.add(title);
        document.add(new Paragraph(" "));

        document.add(new Paragraph("Date de facturation : " + dateFacturation));
        document.add(new Paragraph("Nom du Client : " + nomClient));
        document.add(new Paragraph("Contact : " + contact));
        document.add(new Paragraph(" "));

        // 3. Récupérer les lignes de produits
        String produitsSQL = "SELECT V.Design AS Design, A.qte AS nombre, V.prix AS prix, (A.qte * V.prix) AS total FROM ACHAT A JOIN VOITURE V ON A.idvoit = V.idvoit WHERE A.numAchat = ? ORDER BY V.Design";
        PreparedStatement ps2 = conn.prepareStatement(produitsSQL);
        ps2.setString(1, numAchat);
        ResultSet rs2 = ps2.executeQuery();

        PdfPTable table = new PdfPTable(4);
        table.setWidthPercentage(100);
        table.setWidths(new int[]{4, 2, 3, 3});

        table.addCell("Désignation");
        table.addCell("Quantité");
        table.addCell("Prix Unitaire");
        table.addCell("Total");

        int totalGlobal = 0;
        while (rs2.next()) {
              table.addCell(rs2.getString("Design"));
              table.addCell(rs2.getString("nombre"));
              String prix = String.format("%,d Ar", rs2.getInt("prix"));     // ← Prix avec "Ar"
              String total = String.format("%,d Ar", rs2.getInt("total"));
              table.addCell(prix);
              table.addCell(total);
              totalGlobal += rs2.getInt("total");
        }

        document.add(table);
        document.add(new Paragraph(" "));

        com.lowagie.text.Font totalFont = new com.lowagie.text.Font(com.lowagie.text.Font.HELVETICA, 14, com.lowagie.text.Font.BOLD);
        Paragraph total = new Paragraph("Total général : " + String.format("%,d Ar", totalGlobal), totalFont);
        total.setAlignment(Element.ALIGN_RIGHT);
        document.add(total);

        document.close();
        JOptionPane.showMessageDialog(null, "Facture générée avec succès : facture_" + numAchat + ".pdf");

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Erreur génération PDF : " + e.getMessage());
    }
}

public void envoyerEmailAvecPDF(String destinataire, String sujet, String messageTexte, String cheminPDF) {
    final String expediteur = "kenainyravelomanana@gmail.com";
    final String motDePasse = "ewbh jqkv zbtf pzht"; // Utilise un mot de passe d'application

    Properties props = new Properties();
    props.put("mail.smtp.auth", "true");
    props.put("mail.smtp.starttls.enable", "true");
    props.put("mail.smtp.host", "smtp.gmail.com");
    props.put("mail.smtp.port", "587");

    Session session = Session.getInstance(props, new Authenticator() {
        protected PasswordAuthentication getPasswordAuthentication() {
            return new PasswordAuthentication(expediteur, motDePasse);
        }
    });

    try {
        Message message = new MimeMessage(session);
        message.setFrom(new InternetAddress(expediteur));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(destinataire));
        message.setSubject(sujet);

        // Partie texte
        MimeBodyPart textPart = new MimeBodyPart();
        textPart.setText(messageTexte);

        // Pièce jointe
        MimeBodyPart attachmentPart = new MimeBodyPart();
        attachmentPart.attachFile(new File(cheminPDF));

        Multipart multipart = new MimeMultipart();
        multipart.addBodyPart(textPart);
        multipart.addBodyPart(attachmentPart);

        message.setContent(multipart);

        Transport.send(message);

        System.out.println("E-mail envoyé avec succès !");
    } catch (Exception e) {
        e.printStackTrace();
    }
}

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton envoyeEmail;
    private component.header header1;
    private javax.swing.JScrollPane jScrollPane1;
    private swing.panelBorder panelBorder1;
    private javax.swing.JButton pdf;
    private swing.table tableFacture;
    // End of variables declaration//GEN-END:variables
}
